<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SIIP</title>
      <link href="/2024/11/09/siip/"/>
      <url>/2024/11/09/siip/</url>
      
        <content type="html"><![CDATA[<h1 id="实训过程总结"><a href="#实训过程总结" class="headerlink" title="实训过程总结"></a>实训过程总结</h1><h2 id="难点一-编码规则"><a href="#难点一-编码规则" class="headerlink" title="难点一 编码规则"></a>难点一 编码规则</h2><h3 id="BarcodeDetail类实现"><a href="#BarcodeDetail类实现" class="headerlink" title="BarcodeDetail类实现"></a>BarcodeDetail类实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.sie.app.mes.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sie.snest.sdk.BaseModel;</span><br><span class="line"><span class="keyword">import</span> com.sie.snest.sdk.annotation.meta.Model;</span><br><span class="line"><span class="keyword">import</span> com.sie.snest.sdk.annotation.meta.Property;</span><br><span class="line"><span class="keyword">import</span> com.sie.snest.sdk.annotation.validate.Validate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Model(name = &quot;barcode_detail&quot;,tableName = &quot;barcode_detail&quot;,displayName = &quot;条码明细&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BarcodeDetail</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;BarcodeDetail&gt; &#123;</span><br><span class="line">    <span class="meta">@Property(displayName = &quot;编码&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Property(displayName = &quot;日期&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String date;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Property(displayName = &quot;当前流水号&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer curSeq;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BarcodeDetail <span class="title function_">setCode</span><span class="params">(String code)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.set(<span class="string">&quot;code&quot;</span>, code);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getStr(<span class="string">&quot;code&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BarcodeDetail <span class="title function_">setDate</span><span class="params">(String date)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.set(<span class="string">&quot;date&quot;</span>, date);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getStr(<span class="string">&quot;date&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BarcodeDetail <span class="title function_">setCurSeq</span><span class="params">(Integer curSeq)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.set(<span class="string">&quot;curSeq&quot;</span>, curSeq);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getCurSeq</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getInt(<span class="string">&quot;curSeq&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BarcodeRule类实现"><a href="#BarcodeRule类实现" class="headerlink" title="BarcodeRule类实现"></a>BarcodeRule类实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sie.app.mes.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sie.snest.engine.model.Bool;</span><br><span class="line"><span class="keyword">import</span> com.sie.snest.engine.rule.Filter;</span><br><span class="line"><span class="keyword">import</span> com.sie.snest.sdk.BaseModel;</span><br><span class="line"><span class="keyword">import</span> com.sie.snest.sdk.annotation.meta.MethodService;</span><br><span class="line"><span class="keyword">import</span> com.sie.snest.sdk.annotation.meta.Model;</span><br><span class="line"><span class="keyword">import</span> com.sie.snest.sdk.annotation.meta.Property;</span><br><span class="line"><span class="keyword">import</span> com.sie.snest.sdk.annotation.orm.Option;</span><br><span class="line"><span class="keyword">import</span> com.sie.snest.sdk.annotation.orm.Selection;</span><br><span class="line"><span class="keyword">import</span> com.sie.snest.sdk.annotation.validate.Validate;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.CollectionUtils;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Model(name = &quot;barcode_rule&quot;,tableName = &quot;barcode_rule&quot;,displayName = &quot;条码规则&quot;,isAutoLog = Bool.True)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BarcodeRule</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;BarcodeRule&gt; &#123;</span><br><span class="line">    <span class="meta">@Property(displayName = &quot;编码&quot;)</span></span><br><span class="line">    <span class="meta">@Validate</span>.Unique</span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;日期格式&quot;)</span></span><br><span class="line">    <span class="meta">@Selection(values = &#123;</span></span><br><span class="line"><span class="meta">            @Option(label = &quot;年月日&quot;,value = &quot;1&quot;),</span></span><br><span class="line"><span class="meta">            @Option(label = &quot;年月&quot;,value = &quot;2&quot;),</span></span><br><span class="line"><span class="meta">            @Option(label = &quot;年&quot;,value = &quot;3&quot;)</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="keyword">private</span> String date_type;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;前缀&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String prefix;</span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Property(displayName = &quot;流水号长度&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer seqLength;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * ²éÑ¯µ±Ç°Á÷Ë®ºÅ</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code ±àÂë</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date ÈÕÆÚ</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> µ±Ç°Á÷Ë®ºÅÐÅÏ¢</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> BarcodeDetail <span class="title function_">getBarcodeDetail</span><span class="params">(String code,String date)</span>&#123;</span><br><span class="line">        BarcodeDetail barcodeDetail;</span><br><span class="line">        <span class="comment">//²éÑ¯µ±Ç°Á÷Ë®ºÅ</span></span><br><span class="line">        List&lt;BarcodeDetail&gt; barcodeDetails = <span class="keyword">new</span> <span class="title class_">BarcodeDetail</span>().</span><br><span class="line">                search(Filter.AND(Filter.equal(<span class="string">&quot;code&quot;</span>,code),</span><br><span class="line">                        Filter.equal(<span class="string">&quot;date&quot;</span>,date)),</span><br><span class="line">                        Collections.singletonList(<span class="string">&quot;*&quot;</span>),<span class="number">1</span>,<span class="number">0</span>,<span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">if</span>(CollectionUtils.isNotEmpty(barcodeDetails))&#123;</span><br><span class="line">            <span class="comment">//Èç¹û²éÑ¯µ½£¬Ôò»ñÈ¡Á÷Ë®ºÅ</span></span><br><span class="line">            barcodeDetail = barcodeDetails.get(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            barcodeDetail = <span class="keyword">new</span> <span class="title class_">BarcodeDetail</span>();</span><br><span class="line">            barcodeDetail.setCode(code);</span><br><span class="line">            barcodeDetail.setDate(date);</span><br><span class="line">            barcodeDetail.setCurSeq(<span class="number">1</span>);</span><br><span class="line">            barcodeDetail.create();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> barcodeDetail;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Éú³ÉÌõÂë</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code ±àÂë</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> ÌõÂë</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@MethodService(name = &quot;genBarcode&quot;,description = &quot;生成编码&quot;,auth = &quot;genBarcode&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getBarcode</span><span class="params">(String code)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;=====================================&quot;</span>);</span><br><span class="line">        System.out.println(code);</span><br><span class="line">        System.out.println(<span class="string">&quot;=====================================&quot;</span>);</span><br><span class="line">        List&lt;BarcodeRule&gt; barcodeRules = search(Filter.equal(<span class="string">&quot;code&quot;</span>,code),</span><br><span class="line">                Collections.singletonList(<span class="string">&quot;*&quot;</span>),<span class="number">1</span>,<span class="number">0</span>,<span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">if</span>(CollectionUtils.isEmpty(barcodeRules))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;找不到编码规则&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">BarcodeRule</span> <span class="variable">rule</span> <span class="operator">=</span> barcodeRules.get(<span class="number">0</span>);</span><br><span class="line">        <span class="type">Date</span> <span class="variable">today</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">        String dateString;</span><br><span class="line">        <span class="keyword">if</span>(rule.getDate_type().equals(<span class="string">&quot;1&quot;</span>))&#123;</span><br><span class="line">            dateString = <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyyMMdd&quot;</span>).format(today);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (rule.getDate_type().equals(<span class="string">&quot;2&quot;</span>)) &#123;</span><br><span class="line">            dateString = <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyyMM&quot;</span>).format(today);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (rule.getDate_type().equals(<span class="string">&quot;3&quot;</span>)) &#123;</span><br><span class="line">            dateString = <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy&quot;</span>).format(today);</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;找不到日期类型&quot;</span>+rule.getDate_type());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">BarcodeDetail</span> <span class="variable">barcodeDetail</span> <span class="operator">=</span> getBarcodeDetail(code,dateString);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">curSeq</span> <span class="operator">=</span> barcodeDetail.getCurSeq();</span><br><span class="line">        <span class="type">String</span> <span class="variable">barcodeFormat</span> <span class="operator">=</span> <span class="string">&quot;%s%s%0&quot;</span> + rule.getSeqLength() + <span class="string">&quot;d&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> String.format(barcodeFormat,rule.getPrefix(),dateString,curSeq);</span><br><span class="line">        barcodeDetail.setCurSeq(curSeq+<span class="number">1</span>);</span><br><span class="line">        barcodeDetail.update();</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BarcodeRule <span class="title function_">setCode</span><span class="params">(String code)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.set(<span class="string">&quot;code&quot;</span>, code);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BarcodeRule <span class="title function_">setDate_type</span><span class="params">(String date_type)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.set(<span class="string">&quot;date_type&quot;</span>, date_type);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDate_type</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getStr(<span class="string">&quot;date_type&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getStr(<span class="string">&quot;code&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> BarcodeRule <span class="title function_">setPrefix</span><span class="params">(String prefix)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.set(<span class="string">&quot;prefix&quot;</span>, prefix);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPrefix</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getStr(<span class="string">&quot;prefix&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BarcodeRule <span class="title function_">setSeqLength</span><span class="params">(Integer seqLength)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.set(<span class="string">&quot;seqLength&quot;</span>, seqLength);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getSeqLength</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getInt(<span class="string">&quot;seqLength&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="模型添加自动编码"><a href="#模型添加自动编码" class="headerlink" title="模型添加自动编码"></a>模型添加自动编码</h3><p>对于各个需要自动编码的模型添加下面的函数。<br>重写create方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> RecordSet <span class="title function_">create</span><span class="params">(List&lt;Material&gt; valueList)</span>&#123;</span><br><span class="line">        valueList.forEach(m-&gt;&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">materialCode</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BarcodeRule</span>().getBarcode(m.getCode());</span><br><span class="line">            m.setCode(materialCode);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> (RecordSet) getMeta().get(<span class="string">&quot;material&quot;</span>) <span class="comment">//注意这里可以根据模型进行修改</span></span><br><span class="line">                .callSuper(Material.class,<span class="string">&quot;create&quot;</span>,valueList);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>‍</p><h2 id="难点二-文件上传下载"><a href="#难点二-文件上传下载" class="headerlink" title="难点二 文件上传下载"></a>难点二 文件上传下载</h2><h3 id="前端修改"><a href="#前端修改" class="headerlink" title="前端修改"></a>前端修改</h3><h4 id="MinIO的本地API地址"><a href="#MinIO的本地API地址" class="headerlink" title="MinIO的本地API地址"></a>MinIO的本地API地址</h4><p>target: ‘<a href="http://127.0.0.1:19000/fileSystem/">http://127.0.0.1:19000/fileSystem/</a>‘</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack 工程开发环境 配置</span></span><br><span class="line"><span class="keyword">const</span> &#123; merge &#125; = <span class="built_in">require</span>(<span class="string">&#x27;webpack-merge&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> common = <span class="built_in">require</span>(<span class="string">&#x27;./webpack.common&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> devMerge = <span class="built_in">require</span>(<span class="string">&#x27;@tech/t-build/BuildWebpack/webpack.dev.merge.js&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> mergeCommon = <span class="title function_">merge</span>(common, devMerge);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">merge</span>(mergeCommon, &#123;</span><br><span class="line">  <span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">port</span>: <span class="string">&#x27;30666&#x27;</span>, <span class="comment">// 本地启动端口</span></span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/fileSystem&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://127.0.0.1:19000/fileSystem/&#x27;</span>, <span class="comment">// 本地开发时改为类似 http://192.168.168.9:8085/, 不需要fileSystem</span></span><br><span class="line">        <span class="attr">pathRewrite</span>: &#123; <span class="string">&#x27;^/fileSystem&#x27;</span>: <span class="string">&#x27;&#x27;</span> &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123; </span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://127.0.0.1:8060&#x27;</span>, </span><br><span class="line">        <span class="attr">pathRewrite</span>: &#123; <span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;&#x27;</span> &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&#x27;/register&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://192.168.168.176:8080/&#x27;</span>, <span class="comment">// 本地开发时改为类似 http://192.168.168.9:8085/, 不需要api</span></span><br><span class="line">        <span class="attr">pathRewrite</span>: &#123; <span class="string">&#x27;^/register&#x27;</span>: <span class="string">&#x27;&#x27;</span> &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="后端修改"><a href="#后端修改" class="headerlink" title="后端修改"></a>后端修改</h3><h4 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h4><p>新增属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Property(displayName = &quot;供应商资质文件&quot;,dataType = DataType._FILE_,contentType = &quot;pdf&quot;,toolTips = &quot;上传供应商资质文件&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String certificationDocs;</span><br></pre></td></tr></table></figure><h4 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h4><p>可以自动<code>生成视图</code></p><h2 id="难点三-指定显示类的其他字段"><a href="#难点三-指定显示类的其他字段" class="headerlink" title="难点三 指定显示类的其他字段"></a>难点三 指定显示类的其他字段</h2><p><a href="http://iidp.chinasie.com:9999/iidpdoc/pages/41d2c6/#manytoone">模型属性 | IIDP (chinasie.com)</a></p><h3 id="ManyToOne"><a href="#ManyToOne" class="headerlink" title="@ManyToOne"></a>@<strong>ManyToOne</strong></h3><p>采用<code>@ManyToOne</code>对<code>er</code>关系多对一进行描述,也可以参考</p><h4 id="1-通过注解displayFormat指定任意的显示字段"><a href="#1-通过注解displayFormat指定任意的显示字段" class="headerlink" title="1. 通过注解displayFormat指定任意的显示字段"></a>1. 通过注解displayFormat指定任意的显示字段</h4><p>支持单个和多个字段格式化输出,格式为:${propery1}-${propery2},(指定的字段不能是related字段)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ManyToOne(displayName = &quot;组织&quot;, targetModel = &quot;res_enterprise&quot;, cascade = &#123;CascadeType.DEL_SET_NULL&#125;,displayFormat =&quot;$&#123;code&#125;)</span></span><br><span class="line"><span class="meta">@ManyToOne(displayName = &quot;组织&quot;, targetModel = &quot;res_enterprise&quot;, cascade = &#123;CascadeType.DEL_SET_NULL&#125;,displayFormat =&quot;$&#123;name&#125;-$&#123;code&#125;)</span></span><br><span class="line"><span class="meta">@JoinColumn(name = &quot;org_id&quot;, referencedProperty = &quot;id&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Map&lt;String, Object&gt; enterprise;</span><br></pre></td></tr></table></figure><h4 id="2-关联非ID字段：通过注解referencedProperty可以指定其他字段-默认是ID字段"><a href="#2-关联非ID字段：通过注解referencedProperty可以指定其他字段-默认是ID字段" class="headerlink" title="2. 关联非ID字段：通过注解referencedProperty可以指定其他字段(默认是ID字段)"></a>2. 关联非ID字段：通过注解referencedProperty可以指定其他字段(默认是ID字段)</h4><p>通过注解referencedProperty可以指定非id字段,存储到数据库中值为code字段的值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ManyToOne(displayName = &quot;组织&quot;, targetModel = &quot;res_enterprise&quot;, cascade = &#123;CascadeType.DEL_SET_NULL&#125;)</span></span><br><span class="line"><span class="meta">@JoinColumn(name = &quot;org_code&quot;, referencedProperty = &quot;code&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Map&lt;String, Object&gt; enterprise;</span><br></pre></td></tr></table></figure><h4 id="3-同一个App内"><a href="#3-同一个App内" class="headerlink" title="3. 同一个App内"></a>3. 同一个App内</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ManyToOne(displayName = &quot;班级&quot;, cascade = CascadeType.DEL_SET_NULL)</span></span><br><span class="line"><span class="meta">@JoinColumn(name = &quot;class_id&quot;, referencedProperty = &quot;id&quot;)</span></span><br><span class="line"><span class="keyword">private</span> ExampleClass exampleClass;</span><br></pre></td></tr></table></figure><p><a href="http://iidp.chinasie.com:9999/iidpdoc/pages/4e9088/#er%E5%85%B3%E7%B3%BB%E7%A4%BA%E4%BE%8B">模型ER关系 | IIDP (chinasie.com)</a></p><p><img src="http://iidp.chinasie.com:9999/iidpdoc/assets/img/IDEA_EXAMPLE_ER.99c85455.jpg" alt="ER图"></p><p>@<strong>JoinColumn</strong></p><table><thead><tr><th>字段名</th><th>中文名</th><th>类型</th><th>默认值</th><th>是否必填</th></tr></thead><tbody><tr><td>name</td><td>数据库表列名,当前表会添加一列org_id</td><td>String</td><td></td><td>是</td></tr><tr><td>referencedProperty</td><td>默认会和one方的主键id关联,  <br>如果是非id字段,需要指定属性名,比如code</td><td>String</td><td>id</td><td>否</td></tr><tr><td>length</td><td>列长度</td><td>int</td><td>64</td><td>否</td></tr></tbody></table><h3 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@JoinColumn(name = &quot;class_id&quot;, referencedProperty = &quot;id&quot;)</span></span><br></pre></td></tr></table></figure><p><code>name</code>是要下拉栏填入的数据库列名，是当前&#x2F;写在的类 数据库中的一列</p><p><code>referencedProperty</code>是下方类的属性，选择要显示的类的属性</p><h1 id="学习笔记"><a href="#学习笔记" class="headerlink" title="学习笔记"></a>学习笔记</h1><h2 id="Day01"><a href="#Day01" class="headerlink" title="Day01"></a>Day01</h2><p>2024.10.19</p><h3 id="IIDP工业数字平台介绍"><a href="#IIDP工业数字平台介绍" class="headerlink" title="IIDP工业数字平台介绍"></a>IIDP工业数字平台介绍</h3><h4 id="工业软件的定义"><a href="#工业软件的定义" class="headerlink" title="工业软件的定义"></a>工业软件的定义</h4><p>应用于工业领域<br>以提高工业企业研发、生产、管理水平和工业装备性能的应用软件</p><h4 id="工业软件的分类"><a href="#工业软件的分类" class="headerlink" title="工业软件的分类"></a>工业软件的分类</h4><p><img src="/img/siip/1.png" alt="1.png"></p><h4 id="MES系统"><a href="#MES系统" class="headerlink" title="MES系统"></a>MES系统</h4><p>&lt;制造执行系统&gt;</p><p>生产控制承上启下</p><h4 id="工业软件架构演变"><a href="#工业软件架构演变" class="headerlink" title="工业软件架构演变"></a>工业软件架构演变</h4><p><img src="/img/siip/2.png" alt="2.png"></p><h4 id="模型驱动设计"><a href="#模型驱动设计" class="headerlink" title="模型驱动设计"></a>模型驱动设计</h4><p>模型驱动架构(Model Driven Architecture, MDA) ，以模型为中心，使用元数据定义一个全新的模型体系，让所有模型皆可扩展，让应用能快速响应业务变化。</p><p><img src="/img/siip/3.png" alt="3.png"></p><h3 id="IIDP开发环境搭建"><a href="#IIDP开发环境搭建" class="headerlink" title="IIDP开发环境搭建"></a>IIDP开发环境搭建</h3><ul><li>Java 1.8</li><li>MySQL 8.0+</li><li>IDEA</li><li>Nginx</li></ul><ol><li>新建空数据库</li><li>启动后端服务</li><li>启动前端服务</li></ol><hr><h3 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h3><h4 id="引擎加载逻辑"><a href="#引擎加载逻辑" class="headerlink" title="引擎加载逻辑"></a>引擎加载逻辑</h4><p><img src="/img/siip/4.png" alt="4.png"></p><h4 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h4><p><img src="/img/siip/5.png" alt="5.png"></p><h3 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h3><h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><ol><li>工厂可以制作很多产品。产品由多种物料加工组装而成。  </li><li>每个产品会按着严格的工艺路线进行加工。每一个步骤都是一个工序。  </li><li>每个产品都会有一个产品 BOM（Bill of Material），代表加工该产品所需物料。  </li><li>每个工序也会有一个 BOM，代表该工序加工时的所需物料。  </li><li>每生产一个批次的产品，都会有一个工单。  </li><li>不同工单可能使用不同的工艺路线。</li></ol><h4 id="模型设计"><a href="#模型设计" class="headerlink" title="模型设计"></a>模型设计</h4><p><img src="/img/siip/6.png" alt="6.png"></p><h3 id="模型-1"><a href="#模型-1" class="headerlink" title="模型"></a>模型</h3><h4 id="模型物料定义"><a href="#模型物料定义" class="headerlink" title="模型物料定义"></a>模型物料定义</h4><h4 id="com-sie-app-demo-model-Material-java"><a href="#com-sie-app-demo-model-Material-java" class="headerlink" title="com.sie.app.demo/model/Material.java"></a><code>com.sie.app.demo/model/Material.java</code></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Model(name = &quot;material&quot;,</span></span><br><span class="line"><span class="meta">  tableName = &quot;ems-material&quot;,</span></span><br><span class="line"><span class="meta">  displayName = &quot;物料&quot;,</span></span><br><span class="line"><span class="meta">  description = &quot;物料信息&quot;,</span></span><br><span class="line"><span class="meta">  isAutoLog = Bool.True</span></span><br><span class="line"><span class="meta">  )</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Material</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;Material&gt;&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>模型会使用 <a href="https://github.com/Model" title="@Model">@Model</a> 注解标识，并且继承 BaseModel 类型。以下是 <a href="https://github.com/Model" title="@Model">@Model</a> 注解的属性。上图定义了一个名为 material 的模型，并指定表名为 ems_material。</p><p>当前会先使用缓存视图</p><p><code>开发者中心-模型管理</code></p><p>选择对应模型 [生成视图]</p><p><code>开发者中心-视图管理</code></p><p>复制视图preview</p><p>&#96;&#96;com.sie.app.demo&#x2F;view&#x2F;ems-material.json&#96;</p><p>粘贴保存视图文件</p><p>&#96;&#96;com.sie.app.demo&#x2F;app.json&#96;</p><p>更新视图列表</p><p>下次启动会使用[ems-material.json]视图</p><hr><h2 id="Day02"><a href="#Day02" class="headerlink" title="Day02"></a>Day02</h2><p>2024.10.20</p><h3 id="测试基本类型"><a href="#测试基本类型" class="headerlink" title="测试基本类型"></a>测试基本类型</h3><h4 id="Property-注解"><a href="#Property-注解" class="headerlink" title="@Property 注解"></a><a href="https://github.com/Property" title="@Property">@Property</a> 注解</h4><p>使用 <a href="https://github.com/Property" title="@Property">@Property</a> 注解可以给模型增加属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Model(name = &quot;test_test1&quot;,displayName = &quot;测试基本类型&quot;,type=Model.ModelType.Buss)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestTest1</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;TestTest1&gt; &#123;</span><br><span class="line">    <span class="meta">@Property(displayName = &quot;测试字符串&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String testStr;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Property(displayName = &quot;测试整形类型&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> testIntType;</span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Property(displayName = &quot;测试整形包装类型&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer testIntegerType;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;测试长整型类型&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long testLongType;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;测试双精度类型&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Float testFloatType;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;测试浮点类型&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Double testDoubleType;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;测试日期类型&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date testDateTpe;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;测试日期时间类型&quot;,dataType = DataType.DATE_TIME)</span></span><br><span class="line">    <span class="keyword">private</span> Date testDateTimeType;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;测试数字计算类型&quot;,dataType = DataType.BIG_DECIMAL)</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal testBigDecimalType;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>开发者中心-模型管理</code>   [生成视图]<br><code>开发者中心-视图管理</code>   粘贴视图<br>([重置种子数据] 重新获取)</p><p><code>menus.json</code></p><p>新增二级目录</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;menus&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;demo_root_menu&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;demo_root_menu&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;display_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;物料管理系统&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;active&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;sequence&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;material_menu&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;material_menu&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;display_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;物料管理&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;material&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;view&quot;</span><span class="punctuation">:</span> <span class="string">&quot;material_grid,material_search,material_form&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;sequence&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;active&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;parent_ids&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;@ref&quot;</span><span class="punctuation">:</span> <span class="string">&quot;demo_root_menu&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;product_menu&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;product_menu&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;display_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;产品管理&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;product&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;view&quot;</span><span class="punctuation">:</span> <span class="string">&quot;product_grid,product_search,product_form&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;sequence&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;active&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;parent_ids&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;@ref&quot;</span><span class="punctuation">:</span> <span class="string">&quot;demo_root_menu&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="测试校验数据"><a href="#测试校验数据" class="headerlink" title="测试校验数据"></a>测试校验数据</h3><h4 id="Validate-注解"><a href="#Validate-注解" class="headerlink" title="@Validate 注解"></a><a href="https://github.com/Validate" title="@Validate">@Validate</a> 注解</h4><p><a href="https://github.com/Validate" title="@Validate">@Validate</a> 注解提供了常用的字段属性校验。用于新增、编辑模型的时候进行数据合法性校验。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Model(name = &quot;test_test2&quot;,displayName = &quot;测试校验框架&quot;,type=Model.ModelType.Buss)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestTest2</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;TestTest2&gt; &#123;</span><br><span class="line">    <span class="meta">@Property(columnName = &quot;phone&quot;,displayName = &quot;手机号码&quot;)</span></span><br><span class="line">    <span class="meta">@Validate</span>.Phone(message = <span class="string">&quot;手机号格式不正确&quot;</span>)</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Property(columnName = &quot;email&quot;,displayName = &quot;邮箱&quot;)</span></span><br><span class="line">    <span class="meta">@Validate</span>.Email(message = <span class="string">&quot;邮箱格式不正确&quot;</span>)</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Validate</span>.NotBlank(message = <span class="string">&quot;年龄不能为空&quot;</span>)</span><br><span class="line">    <span class="meta">@Validate</span>.Max(value = <span class="number">110</span>,message = <span class="string">&quot;年龄不能大于110岁&quot;</span>)</span><br><span class="line">    <span class="meta">@Validate</span>.Min(value = <span class="number">18</span>,message = <span class="string">&quot;年龄不能小于18岁&quot;</span>)</span><br><span class="line">    <span class="meta">@Property(columnName = &quot;age&quot;,displayName = &quot;年龄&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Validate</span>.NotBlank(message = <span class="string">&quot;总数不能为空&quot;</span>)</span><br><span class="line">    <span class="meta">@Validate</span>.Max(value = <span class="number">1000</span>,message = <span class="string">&quot;总数不能大于1000&quot;</span>)</span><br><span class="line">    <span class="meta">@Property(columnName = &quot;totalNum&quot;,displayName = &quot;总数&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Double totalNum;</span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Validate</span>.Size(min = <span class="number">10</span>,max = <span class="number">100</span>)</span><br><span class="line">    <span class="meta">@Property(displayName = &quot;学生名字&quot;,length = 10)</span></span><br><span class="line">    <span class="keyword">private</span> String stuName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Validate</span>.Unique(properties =&#123;<span class="string">&quot;stuName&quot;</span>,<span class="string">&quot;stuCode&quot;</span>&#125;,message = <span class="string">&quot;学生名字和学号必须唯一&quot;</span>)</span><br><span class="line">    <span class="meta">@Property(displayName = &quot;学号&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String stuCode;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打包省略正则表达式过程</p><h3 id="下拉值选项"><a href="#下拉值选项" class="headerlink" title="下拉值选项"></a>下拉值选项</h3><h3 id="Selection-注解"><a href="#Selection-注解" class="headerlink" title="@Selection 注解"></a><a href="https://github.com/Selection" title="@Selection">@Selection</a> 注解</h3><p>  <a href="https://github.com/Selection" title="@Selection">@Selection</a> 注解用于定义下拉取值的属性。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Model(name = &quot;test_test_3&quot;,displayName = &quot;测试下拉框和字典&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestTest3</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;TestTest3&gt; &#123;</span><br><span class="line">    <span class="meta">@Property(displayName = &quot;1、单选常量&quot;,defaultValue = &quot;1&quot;,widget = &quot;select&quot;,length = 256)</span></span><br><span class="line">    <span class="meta">@Selection(values = &#123;@Option(label = &quot;状态1&quot;,value = &quot;1&quot;),</span></span><br><span class="line"><span class="meta">            @Option(label = &quot;状态2&quot;,value = &quot;2&quot;),</span></span><br><span class="line"><span class="meta">            @Option(label = &quot;状态3&quot;,value = &quot;3&quot;)&#125;)</span></span><br><span class="line">    <span class="keyword">private</span> String status;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;2、多选常量&quot;,defaultValue = &quot;1&quot;,widget = &quot;select&quot;,multiple = true,length = 256)</span></span><br><span class="line">    <span class="meta">@Selection(values = &#123;@Option(label = &quot;状态1&quot;,value = &quot;1&quot;),</span></span><br><span class="line"><span class="meta">            @Option(label = &quot;状态2&quot;,value = &quot;2&quot;),</span></span><br><span class="line"><span class="meta">            @Option(label = &quot;状态3&quot;,value = &quot;3&quot;)&#125;)</span></span><br><span class="line">    <span class="keyword">private</span> String muiltStatus;  </span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;3-字典-状态&quot;)</span></span><br><span class="line">    <span class="meta">@Dict(typeCode = &quot;validFlag&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String validFlag;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;4-多选字典-状态&quot;)</span></span><br><span class="line">    <span class="meta">@Dict(typeCode = &quot;validFlags2&quot;,multiple = true)</span></span><br><span class="line">    <span class="keyword">private</span> String validFlags2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数据字典"><a href="#数据字典" class="headerlink" title="数据字典"></a>数据字典</h3><h3 id="Dict-注解"><a href="#Dict-注解" class="headerlink" title="@Dict 注解"></a><a href="https://github.com/Dict" title="@Dict">@Dict</a> 注解</h3><p>  <a href="https://github.com/Dict" title="@Dict">@Dict</a> 注解用于声明使用数据字典</p><h4 id="数据字典使用"><a href="#数据字典使用" class="headerlink" title="数据字典使用"></a>数据字典使用</h4><p><code>租户端-平台主数据-数据字典</code></p><p>编码与typeCode对应，即[status]</p><h2 id="Day03"><a href="#Day03" class="headerlink" title="Day03"></a>Day03</h2><p>2024.10.25</p><h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><h4 id="安装应用"><a href="#安装应用" class="headerlink" title="安装应用"></a>安装应用</h4><p>复制 sie-snest-mes 软件包</p><p><code>sie-iidp-apps/pom.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span>sie-snest-demo<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span>sie-snest-mes<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>sie-snest-mes/pom.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sie-snest-mes<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br></pre></td></tr></table></figure><p>clean install 打jar包<br><code>应用市场</code>  上传jar包<br><code>应用市场</code>  [上架]<br><code>应用市场</code>  [安装]</p><h5 id="若-应用市场-删除了"><a href="#若-应用市场-删除了" class="headerlink" title="若 应用市场 删除了 &lt;应用&gt;"></a>若 应用市场 删除了 &lt;应用&gt;</h5><p>数据库 删除 表: </p><p>meta_app<br>meta_app_store</p><h4 id="更新应用"><a href="#更新应用" class="headerlink" title="更新应用"></a>更新应用</h4><ul><li>正确更新应用的方式</li></ul><ol><li>修改源代码</li><li>打新的jar包clean install   (&#x2F;&#x2F;重新调试?)</li><li><code>应用市场</code>  上传新的jar包</li><li><code>应用市场</code>  [上架]</li><li><code>已安装应用</code>  [更新]</li><li>切换用户</li></ol><hr><h3 id="模型-ER-关系"><a href="#模型-ER-关系" class="headerlink" title="模型 ER 关系"></a>模型 ER 关系</h3><h4 id="1-ManyToOne-多对一"><a href="#1-ManyToOne-多对一" class="headerlink" title="1 .@ManyToOne 多对一"></a>1 .<a href="https://github.com/ManyToOne" title="@ManyToOne">@ManyToOne</a> 多对一</h4><p>  例如产品BOM 与产品模型形成多对一关系<br>  <a href="https://github.com/ManyToOne" title="@ManyToOne">@ManyToOne</a> 需要与 <a href="https://github.com/JoinColumn" title="@JoinColumn">@JoinColumn</a> 一起使用</p><h4 id="2-OneToMany-一对多"><a href="#2-OneToMany-一对多" class="headerlink" title="2. @OneToMany 一对多"></a>2. <a href="https://github.com/OneToMany" title="@OneToMany">@OneToMany</a> 一对多</h4><p>  例如产品与产品 BOM模型形成一对多关系</p><h4 id="3-ManyToMany-多对多"><a href="#3-ManyToMany-多对多" class="headerlink" title="3. @ManyToMany 多对多"></a>3. <a href="https://github.com/ManyToMany" title="@ManyToMany">@ManyToMany</a> 多对多</h4><p>  例如用户与角色，形成多对多 ER 关系。<a href="https://github.com/ManyToMany" title="@ManyToMany">@ManyToMany</a> 需要与 <a href="https://github.com/JoinTable" title="@JoinTable">@JoinTable</a> 结合使用。<a href="https://github.com/JoinTable" title="@JoinTable">@JoinTable</a> 用于声明中间表的表明及关联字段名</p><p><code>com.sie.app.demo/model/TestTest4.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Model(name = &quot;test_test_4&quot;, displayName = &quot;测试ER模型4&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestTest4</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;TestTest4&gt;&#123;</span><br><span class="line"><span class="meta">@Property(displayName = &quot;名称&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="meta">@Property(displayName = &quot;编码&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String code;</span><br><span class="line"></span><br><span class="line"><span class="meta">@OnetoMany</span></span><br><span class="line"><span class="keyword">private</span> List&lt;TestTest5&gt; testTest5List;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>com.sie.app.demo/model/TestTest5.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Model(name = &quot;test_test_5&quot;, displayName = &quot;测试ER模型5&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestTest5</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;TestTest5&gt; &#123;</span><br><span class="line">    <span class="meta">@Property(displayName = &quot;名称&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Property(displayName = &quot;编码&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne(targetModel = &quot;test_test_4&quot;, displayName = &quot;测试ER模型4&quot;)</span></span><br><span class="line">    <span class="meta">@JoinColumn(name = &quot;test_test_4_id&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> TestTest4 testTest4;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>com.sie.app.demo/model/TestTest6.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Model(name = &quot;test_test_6&quot;, displayName = &quot;测试ER模型6&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestTest6</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;TestTest6&gt; &#123;</span><br><span class="line">    <span class="meta">@Property(displayName = &quot;名称&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;编码&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToMany</span></span><br><span class="line">    <span class="meta">@JoinTable(name = &quot;test_6_and_test_7_rel&quot;,joinColumns = @JoinColumn(name = &quot;test_test_6_id&quot;,nullable = false),</span></span><br><span class="line"><span class="meta">            inverseJoinColumns = @JoinColumn(name = &quot;test_test_7_id&quot;,nullable = false))</span></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;测试ER模型7&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;TestTest7&gt; testTest7List;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>com.sie.app.demo/model/TestTest7.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Model(name = &quot;test_test_7&quot;, displayName = &quot;测试ER模型7&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestTest7</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;TestTest6&gt; &#123;</span><br><span class="line">    <span class="meta">@Property(displayName = &quot;名称&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Property(displayName = &quot;编码&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line">  </span><br><span class="line">    <span class="meta">@ManyToMany</span></span><br><span class="line">    <span class="meta">@JoinTable(name = &quot;test_6_and_test_7_rel&quot;,joinColumns = @JoinColumn(name = &quot;test_test_6_id&quot;,nullable = false),</span></span><br><span class="line"><span class="meta">            inverseJoinColumns = @JoinColumn(name = &quot;test_test_6_id&quot;,nullable = false))</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;TestTest6&gt; testTest6List;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>应用目录栏缺失（切勿重启后端）</p><ol><li><code>已安装应用</code> 卸载对应应用</li><li><code>应用市场</code>  导入jar包</li><li><code>应用市场</code>  上架</li><li><code>应用市场</code>  安装</li><li>切换用户</li></ol><p>尝试更新应用</p><h2 id="Day04"><a href="#Day04" class="headerlink" title="Day04"></a>Day04</h2><p>2024.10.26</p><h3 id="模型扩展与继承"><a href="#模型扩展与继承" class="headerlink" title="模型扩展与继承"></a>模型扩展与继承</h3><p><code>com.sie.app.demo/model/TestUser.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Model(name = &quot;test_user&quot;, description = &quot;测试用户&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestUser</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;TestUser&gt; &#123;</span><br><span class="line">    <span class="meta">@Property(columnName = &quot;name&quot;, displayName = &quot;名称&quot;,displayForModel = true)</span></span><br><span class="line">    <span class="comment">//@Validate.NotBlank</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Validate</span>.Email(message = <span class="string">&quot;邮箱格式不正确&quot;</span>)</span><br><span class="line">    <span class="meta">@Property(columnName = &quot;email&quot;, displayName = &quot;邮箱&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="模型扩展"><a href="#模型扩展" class="headerlink" title="模型扩展"></a>模型扩展</h4><ul><li>如果模型的 name 与 parent 相同，就是扩展原来的模型。引擎只会有一个模型。   </li><li>扩展模型可以给模型增加属性、服务。</li></ul><p><code>com.sie.app.demo/model/TestUser2.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Model(name = &quot;test_user&quot;, parent = &quot;test_user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestUser2</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;TestUser2&gt; &#123;</span><br><span class="line"><span class="meta">@Property(displayName = &quot;扩展aaa&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String aaa;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Property(displayName = &quot;扩展bbb&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String bbb;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="模型继承"><a href="#模型继承" class="headerlink" title="模型继承"></a>模型继承</h4><ul><li>如果模型的 name 与 parent 不相同，就是继承原来的模型。引擎会有两个不同的模型。  </li><li>继承模型可以复用父模型的属性、服务。</li></ul><p><code>com.sie.app.demo/model/TestUser3.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Model(name = &quot;test_user_3&quot;, parent = &quot;test_user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestUser3</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;TestUser3&gt; &#123;</span><br><span class="line"><span class="meta">@Property(displayName = &quot;儿子aaa&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String aaa1;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Property(displayName = &quot;儿子bbb&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String bbb;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;父类若有扩展，扩展的属性也会被继承&#x3D;&#x3D;<br>&#x3D;&#x3D;若扩展的属性与子类新属性重名，优先使用子类的属性。&#x3D;&#x3D;</p><p><code>开发者中心-模型管理</code></p><p>只会出现两个类: test_user  test_user_3</p><p>test_user内含：</p><ol><li>TestUser.java属性</li><li>TestUser2.java属性：扩展aaa(aaa),扩展bbb(bbb)</li></ol><p>test_user_3内含：</p><ol><li>继承test_user不重名属性</li><li>TestUser3.java属性：儿子aaa(aaa1)</li></ol><p>由于儿子bbb(bbb)与扩展bbb(bbb)重复，优先保留儿子bbb(bbb)</p><h3 id="模型服务"><a href="#模型服务" class="headerlink" title="模型服务"></a>模型服务</h3><h4 id="声明服务"><a href="#声明服务" class="headerlink" title="声明服务"></a>声明服务</h4><p>在模型写一个方法，并且加上 <a href="https://github.com/MethodService" title="@MethodService">@MethodService</a> 标记这个方法成为一个模型服务。模型的服务可以作为 API 被前端调用。<br>  服务需要写明几个信息<br>  1. name 服务名称<br>  2. auth 权限点<br>  3. description 服务描述<br><code>com.sie.app.demo/model/TestMethodService.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Model(name = &quot;test_method_service&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestMethodService</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;TestMethodService&gt;) &#123;</span><br><span class="line"><span class="meta">@MethodService(name = &quot;hello&quot;, description = &quot;say hello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">(String name)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;Hello World!&quot;</span>+name;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="调试接口"><a href="#调试接口" class="headerlink" title="调试接口"></a>调试接口</h4><p>在租户端使用demo应用中服务模板修改</p><p>例</p><p><code>测试基本类型-F12-Network</code></p><p>找到调用服务的Post转发</p><p>右键复制为bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">`Postman客户端-import-Raw text`</span><br><span class="line">粘贴</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">修改Body部分</span><br><span class="line">参数</span><br><span class="line">```json</span><br><span class="line">&quot;args&quot;:&#123;</span><br><span class="line">&quot;name&quot;: &quot;eason&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&quot;model&quot;: &quot;test_method_service&quot;,</span><br><span class="line">&quot;service&quot;: &quot;hello&quot;</span><br></pre></td></tr></table></figure><p>修改发送网址model,service</p><hr><h4 id="扩展服务"><a href="#扩展服务" class="headerlink" title="扩展服务"></a>扩展服务</h4><p>在声明模型的时候，我们的模型继承了 BaseModel。引擎会自动给模型加上基础增删改查的服务。</p><p>一般来说自带的服务都能满足业务要求。如果模型的服务不满足业务要求的时候，我们可以扩展原来的服务。  </p><p>我们只需要在模型中声明相同方法签名的服务，然后加入新增的逻辑。</p><p>在扩展的服务中，可以使用 getMeta().get(modelname).callSuper() 方法调用模型扩展前的服务。</p><p>例<br><code>com.sie.app.demo/model/TestCurdMethod.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@MethodService(name = &quot;create&quot;,auth = &quot;create&quot;,description = &quot;创建&quot;)</span></span><br><span class="line"><span class="keyword">public</span> RecordSet <span class="title function_">create</span><span class="params">(RecordSet rs, List&lt;Map&lt;String, Object&gt;&gt; valueList)</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;创建方法入参&quot;</span>+valueList);</span><br><span class="line">    <span class="type">RecordSet</span> <span class="variable">rsc</span> <span class="operator">=</span> (RecordSet) rs.callSuper(TestCurdMethod.class,<span class="string">&quot;create&quot;</span>,valueList);</span><br><span class="line">    <span class="keyword">return</span> rsc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@MethodService(name = &quot;update&quot;,auth = &quot;update&quot;, description = &quot;更新&quot;)</span></span><br><span class="line"><span class="keyword">public</span> RecordSet <span class="title function_">update</span><span class="params">(RecordSet rs,Map&lt;String,Object&gt; values)</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;更新方法入参&quot;</span>+values);</span><br><span class="line">    <span class="type">RecordSet</span> <span class="variable">rec</span> <span class="operator">=</span> (RecordSet) rs.callSuper(TestCurdMethod.class,<span class="string">&quot;update&quot;</span>,values);</span><br><span class="line">    <span class="keyword">return</span> rec;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@MethodService(name = &quot;delete&quot;,auth = &quot;delete&quot;,description = &quot;删除&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">delete</span><span class="params">(RecordSet rs)</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;删除方法入参&quot;</span>+rs.getId());</span><br><span class="line">    rs.callSuper(TestCurdMethod.class,<span class="string">&quot;delete&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> Boolean.TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@MethodService(name = &quot;search&quot;, auth = &quot;search&quot;,description = &quot;分页查询方法&quot;)</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Map&lt;String,Object&gt;&gt; <span class="title function_">search</span><span class="params">(RecordSet rs, Filter filter,</span></span><br><span class="line"><span class="params">                                 List&lt;String&gt; properties,</span></span><br><span class="line"><span class="params">                                 Integer limit,Integer offset,String order)</span>&#123;</span><br><span class="line">    List&lt;Map&lt;String,Object&gt;&gt; result =</span><br><span class="line">        (List&lt;Map&lt;String, Object&gt;&gt;) rs.callSuper(TestCurdMethod.class,<span class="string">&quot;search&quot;</span>,filter,properties,limit,offset,order);</span><br><span class="line">    System.out.println(<span class="string">&quot;分页查询方法返回参数&quot;</span>+result);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>生成视图<br><code>com.sie.app.demo/views/test-curd-method.json</code></p><p>断点测试CURD</p><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><h5 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h5><pre><code>import com.sie.snest.engine.rule.Filter;</code></pre><p>在服务中，通常需要调用 search 方法进行查询数据。search 方法第一个参数是 Filter 类。Filter 用于构建查询条件。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Filter.equal(<span class="string">&quot;name&quot;</span>, name);            # name = “name”</span><br><span class="line">Filter.notEqual(<span class="string">&quot;name&quot;</span>, name);        # name &lt;&gt; “name”</span><br><span class="line">Filter.like(<span class="string">&quot;name&quot;</span>, name);                # name like “%name%”</span><br><span class="line">Filter.notLike(<span class="string">&quot;name&quot;</span>, name);            # name not like “%name%”</span><br><span class="line">Filter.rlike(<span class="string">&quot;name&quot;</span>, name);                # name like “name%”</span><br><span class="line">Filter.llike(<span class="string">&quot;name&quot;</span>, name);                # name like “%name”</span><br><span class="line">Filter.greater(<span class="string">&quot;age&quot;</span>, <span class="number">10</span>);                # age &gt; <span class="number">10</span></span><br><span class="line">Filter.greaterOrEqual(<span class="string">&quot;age&quot;</span>, <span class="number">10</span>);        # age &gt;= <span class="number">10</span></span><br><span class="line">Filter.less(<span class="string">&quot;age&quot;</span>, <span class="number">10</span>);                    # age &lt; <span class="number">10</span></span><br><span class="line">Filter.lessOrEqual(<span class="string">&quot;age&quot;</span>, <span class="number">10</span>);            # age &lt;= <span class="number">10</span></span><br><span class="line">Filter.in(<span class="string">&quot;name&quot;</span>, Arrays.asList(<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;李四&quot;</span>));    # name <span class="title function_">in</span> <span class="params">(“张三”, “李四”)</span></span><br><span class="line">Filter.notIn(<span class="string">&quot;name&quot;</span>, Arrays.asList(<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;李四&quot;</span>)); # name not <span class="title function_">in</span> <span class="params">(“张三”, “李四”)</span></span><br></pre></td></tr></table></figure><h5 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h5><p>Filter 提供 AND 和 OR 方法，用于构建 SQL 中的 and 和 or 功能。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Filter</span> <span class="variable">a</span> <span class="operator">=</span> Filter.equal(<span class="string">&quot;name&quot;</span>, name);</span><br><span class="line"><span class="type">Filter</span> <span class="variable">b</span> <span class="operator">=</span> Filter.notEqual(<span class="string">&quot;name&quot;</span>, name);</span><br><span class="line"><span class="type">Filter</span> <span class="variable">c</span> <span class="operator">=</span> Filter.AND(a, b);        # a and b</span><br><span class="line"><span class="type">Filter</span> <span class="variable">d</span> <span class="operator">=</span> Filter.OR(a, b);        # a or b</span><br></pre></td></tr></table></figure><h5 id="前端表示"><a href="#前端表示" class="headerlink" title="前端表示"></a>前端表示</h5><p><img src="/img/siip/7.png" alt="7.png"></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;filter&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> </span><br><span class="line"><span class="string">&quot;&amp;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">[</span><span class="string">&quot;name&quot;</span><span class="punctuation">,</span> <span class="string">&quot;=&quot;</span><span class="punctuation">,</span> <span class="string">&quot;张三&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;|&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">[</span><span class="string">&quot;age&quot;</span><span class="punctuation">,</span> <span class="string">&quot;&gt;&quot;</span><span class="punctuation">,</span> <span class="number">10</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">[</span><span class="string">&quot;id&quot;</span><span class="punctuation">,</span> <span class="string">&quot;in&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h2 id="Day05"><a href="#Day05" class="headerlink" title="Day05"></a>Day05</h2><p>2024.10.27</p><h3 id="需求实现"><a href="#需求实现" class="headerlink" title="需求实现"></a>需求实现</h3><p>文件结构</p><pre><code>mes├── model│   ├── Material.java│   ├── Order.java│   ├── Process.java│   ├── ProcessBom.java│   ├── ProcessRoute.java│   ├── Product.java│   ├── ProductBom.java│   └── Supplier.java├── views│   ├── menus.json│   ├── mes-material-view.json│   ├── mes-order-view.json│   ├── mes-process-bom-view.json│   ├── mes-process-route-view.json│   ├── mes-process-view.json│   ├── mes-product-bom-view.json│   ├── mes-product-view.json│   └── mes-supplier-view.json└── app.json</code></pre><h4 id="模型定义"><a href="#模型定义" class="headerlink" title="模型定义"></a>模型定义</h4><p><code>Material.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Model(name = &quot;material&quot;,</span></span><br><span class="line"><span class="meta">        tableName = &quot;material&quot;,</span></span><br><span class="line"><span class="meta">        displayName = &quot;物料&quot;,</span></span><br><span class="line"><span class="meta">        description = &quot;物料信息&quot;,</span></span><br><span class="line"><span class="meta">        isAutoLog = Bool.True</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Material</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;Material&gt; &#123;</span><br><span class="line">    <span class="meta">@Property(displayName = &quot;名称&quot;,displayForModel = true)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;编码&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Dict(typeCode = &quot;material_type&quot;)</span></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;类型&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String type;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Dict(typeCode = &quot;material_unit&quot;)</span></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;单位&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String unit;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;描述&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;库存量&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer stockQuantity;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;单价&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer price;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne(displayName = &quot;供应类&quot;)</span></span><br><span class="line">    <span class="meta">@JoinColumn</span></span><br><span class="line">    <span class="keyword">private</span> Supplier supplier;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Order.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Model(name = &quot;order&quot;,displayName = &quot;生产订单&quot;,isAutoLog = Bool.True)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Order</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;Order&gt; &#123;</span><br><span class="line">    <span class="meta">@ManyToOne</span></span><br><span class="line">    <span class="meta">@JoinColumn</span></span><br><span class="line">    <span class="keyword">private</span> Product product;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;数量&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer quantity;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;订单状态&quot;,defaultValue = &quot;1&quot;,widget = &quot;select&quot;,length = 256)</span></span><br><span class="line">    <span class="meta">@Selection(values = &#123;@Option(label = &quot;设计中&quot;,value = &quot;1&quot;),</span></span><br><span class="line"><span class="meta">            @Option(label = &quot;生产中&quot;,value = &quot;2&quot;),</span></span><br><span class="line"><span class="meta">            @Option(label = &quot;已完成&quot;,value = &quot;3&quot;)&#125;)</span></span><br><span class="line">    <span class="keyword">private</span> String status;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;预计完成时间&quot;,dataType = DataType.DATE_TIME)</span></span><br><span class="line">    <span class="keyword">private</span> Date dueDate;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Process.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Model(name = &quot;process&quot;,displayName = &quot;工序&quot;,isAutoLog = Bool.True)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Process</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;Process&gt; &#123;</span><br><span class="line">    <span class="meta">@Property(displayName = &quot;名称&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Property(displayName = &quot;编码&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne</span></span><br><span class="line">    <span class="meta">@JoinColumn</span></span><br><span class="line">    <span class="keyword">private</span> ProcessRoute processRoute;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OneToMany</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;ProcessBom&gt; processBomList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>ProcessBom.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Model(name = &quot;process_bom&quot;,displayName = &quot;工序BOM&quot;,isAutoLog = Bool.True)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProcessBom</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;ProcessBom&gt; &#123;</span><br><span class="line">    <span class="meta">@ManyToOne(displayName = &quot;工序&quot;)</span></span><br><span class="line">    <span class="meta">@JoinColumn</span></span><br><span class="line">    <span class="keyword">private</span> Process process;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne(displayName = &quot;物料&quot;)</span></span><br><span class="line">    <span class="meta">@JoinColumn</span></span><br><span class="line">    <span class="keyword">private</span> Material material;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;数量&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Double amount;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>ProcessRoute.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Model(name = &quot;process_route&quot;,displayName = &quot;工艺路线&quot;, isAutoLog = Bool.True)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProcessRoute</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;ProcessRoute&gt; &#123;</span><br><span class="line">    <span class="meta">@Property(displayName = &quot;名称&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;编码&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne</span></span><br><span class="line">    <span class="meta">@JoinColumn</span></span><br><span class="line">    <span class="keyword">private</span> Product product;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Product.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Model(name = &quot;product&quot;, description = &quot;产品&quot;, displayName = &quot;产品&quot;,isAutoLog = Bool.True)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Product</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;Product&gt; &#123;</span><br><span class="line">    <span class="meta">@Validate</span>.NotBlank(message = <span class="string">&quot;产品名称不能为空！&quot;</span>)</span><br><span class="line">    <span class="meta">@Property(displayName = &quot;名称&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Validate</span>.NotBlank(message = <span class="string">&quot;产品名称不能为空！&quot;</span>)</span><br><span class="line">    <span class="meta">@Property(displayName = &quot;编码&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;产品状态&quot;,defaultValue = &quot;1&quot;,widget = &quot;select&quot;,length = 256)</span></span><br><span class="line">    <span class="meta">@Selection(values = &#123;@Option(label = &quot;设计中&quot;,value = &quot;1&quot;),</span></span><br><span class="line"><span class="meta">            @Option(label = &quot;生产中&quot;,value = &quot;2&quot;),</span></span><br><span class="line"><span class="meta">            @Option(label = &quot;已完成&quot;,value = &quot;3&quot;)&#125;)</span></span><br><span class="line">    <span class="keyword">private</span> String status;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OneToMany</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;ProductBom&gt; productBomList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>ProductBom.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Model(name = &quot;product_bom&quot;, description = &quot;产品BOM&quot;, displayName = &quot;产品BOM&quot;,isAutoLog = Bool.True)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductBom</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;ProductBom&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne(displayName = &quot;产品&quot;)</span></span><br><span class="line">    <span class="meta">@JoinColumn</span></span><br><span class="line">    <span class="keyword">private</span> Product product;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne(displayName = &quot;物料&quot;)</span></span><br><span class="line">    <span class="meta">@JoinColumn</span></span><br><span class="line">    <span class="keyword">private</span> Material material;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;数量&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer amount;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Supplier.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Model(name = &quot;supplier&quot;,displayName = &quot;供应类&quot;,isAutoLog = Bool.True)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Supplier</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span>&lt;Supplier&gt; &#123;</span><br><span class="line">    <span class="meta">@Property(displayName = &quot;名称&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(columnName = &quot;phone&quot;, displayName = &quot;联系方式&quot;)</span></span><br><span class="line">    <span class="meta">@Validate</span>.Phone(message = <span class="string">&quot;联系方式不正确&quot;</span>)</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Property(displayName = &quot;地址&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OneToMany</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Material&gt; materialList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="视图定义"><a href="#视图定义" class="headerlink" title="视图定义"></a>视图定义</h4><p>生成视图</p><hr><h3 id="小任务"><a href="#小任务" class="headerlink" title="小任务"></a>小任务</h3><h4 id="7-1-说明"><a href="#7-1-说明" class="headerlink" title="7.1 说明"></a>7.1 说明</h4><p>  为了更熟悉 IIDP 开发的流程，可以从下面四个实训任务选取一个进行开发。</p><h4 id="7-2-产品BOM-管理功能"><a href="#7-2-产品BOM-管理功能" class="headerlink" title="7.2 产品BOM 管理功能"></a>7.2 产品BOM 管理功能</h4><p>  需求<br>  1.完成产品管理页面，有产品名称、规格等信息<br>  2.完成物料管理页面，有物料名称、物料编码（编码唯一）等信息。<br>  3.完成产品BOM标签页。显示产品关联的物料。产品 BOM 有数量属性。<br>  4.实现产品 BOM 的添加、删除功能。</p><p>  提示<br>  1.使用 <a href="https://github.com/Unique" title="@Unique">@Unique</a> 实现编码唯一校验</p><h4 id="7-3-编码规则功能"><a href="#7-3-编码规则功能" class="headerlink" title="7.3 编码规则功能"></a>7.3 编码规则功能</h4><p>  需求<br>  1.使用 IIDP 实现一个编码规则功能。具有增删改查功能。<br>  2.编码规则包含前缀、流水号位数、日期格式。<br>  3.日期格式是下拉选择。有年月日、年月、年三种选项。<br>  4.提供一个服务，可以按指定编码规则生成一个编码。例如前缀 PM、流水号位数 6、日期格式为年月日。调用该服务，返回一个流水号，PM20231201000001。再次调用返回连续流水号的编码。</p><p>  提示<br>  1.使用 <a href="https://github.com/Selection" title="@Selection">@Selection</a> 实现下拉选择</p><h4 id="7-4-数据隔离"><a href="#7-4-数据隔离" class="headerlink" title="7.4 数据隔离"></a>7.4 数据隔离</h4><p>  需求<br>  1.开发一个模型，实现增删改查功能。属性包含创建人、创建时间、修改人、修改时间。<br>  2.用户只能查看自己创建的数据。<br>  3.登录另一账号，不能查看到其他用户的数据。</p><p>  提示<br>  1.使用 isAutoLog 开启审计字段<br>  2.创建人属性名为 create_user</p><h4 id="7-5-服务扩展"><a href="#7-5-服务扩展" class="headerlink" title="7.5 服务扩展"></a>7.5 服务扩展</h4><p>  需求<br>  1.开发一个APP1，有一个订单模型。含有字段发货时间。订单模型具有一个“发货”服务。<br>  2.实现简单增删改查功能。<br>  3.调用服务，将发货时间改成当前时间。<br>  4.开发另一个 APP2。扩展订单模型的发货服务。逻辑为调用服务时，将发货时间改成当前时间+24小时。<br>  5.通过应用市场安装 APP2，点击“发货”按钮。订单的发货时间被修改成当前时间+24小时。</p><p>  提示<br>  1.使用服务扩展</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Malware</title>
      <link href="/2024/10/30/malware/"/>
      <url>/2024/10/30/malware/</url>
      
        <content type="html"><![CDATA[<h2 id="关于结局解密"><a href="#关于结局解密" class="headerlink" title="关于结局解密"></a>关于结局解密</h2><p>初次接触网络安全领域</p><p>涉及知识点：</p><ul><li>文件内容分析（文件头，二进制&#x2F;文本，网页源代码）</li><li>密码学与加解密技术（暴力破解，base64，RSA，md5）</li><li>程序逆向（或关键信息RSA私钥 明文写在程序内）</li></ul><p>算是个CTF入门题，根据评论区线索自行操作了一番</p><h3 id="1-找到彩蛋"><a href="#1-找到彩蛋" class="headerlink" title="1. 找到彩蛋"></a>1. 找到彩蛋</h3><p>重启游戏 邮件下拉到底找到彩蛋</p><p>中间空白有线索</p><p><code>clue.jpg</code></p><p><img src="/img/malware/1.png" alt="图1"></p><h3 id="2-寻找文件"><a href="#2-寻找文件" class="headerlink" title="2. 寻找文件"></a>2. 寻找文件</h3><p>在Steam打开本地文件</p><p><img src="/img/malware/2.png" alt="图2"></p><p>双击发现无法打开图片</p><p>且大小只有几KB不像是图片，很有可能被修改后缀</p><p>用记事本打开</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7z集&#x27; 缡?      &quot;       訦Ot耥u_河槡俶藽鳭R鱣?f暱朢vPs梾o^埞??!</span><br></pre></td></tr></table></figure><p>发现文件头为7z，猜测是压缩包7z格式</p><p>修改文件后缀尝试解压</p><p>发现解压需要密码</p><p><img src="/img/malware/3.png" alt="图3"></p><h3 id="3-破解压缩包密码"><a href="#3-破解压缩包密码" class="headerlink" title="3. 破解压缩包密码"></a>3. 破解压缩包密码</h3><p>由于是7z格式，可用工具较少</p><p>使用Passware Kit Forensic字典攻击(即常用密码进行暴力尝试)</p><p>密码较为简单    1分钟就完成解密</p><p><img src="/img/malware/4.png" alt="图4"></p><p>压缩包密码: <code>password</code></p><h3 id="4-解Base64编码"><a href="#4-解Base64编码" class="headerlink" title="4. 解Base64编码"></a>4. 解Base64编码</h3><p>压缩包里clue&#x2F;7&#x2F;3&#x2F;Hello.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Zm9sZGVy77yaMjk5ZDEyZDg4ZTBlOTljMQ== --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello Tom!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Base64 编码后的字符串长度通常是4的倍数。如果长度不是4的倍数，可能会在末尾有一个或两个等号（&#x3D;）作为填充</p><p><code>Zm9sZGVy77yaMjk5ZDEyZDg4ZTBlOTljMQ==</code></p><p>对这段Base64编码进行转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">encoded_string = <span class="string">&quot;Zm9sZGVy77yaMjk5ZDEyZDg4ZTBlOTljMQ==&quot;</span></span><br><span class="line">decoded_bytes = base64.b64decode(encoded_string)</span><br><span class="line">decoded_string = decoded_bytes.decode(<span class="string">&#x27;utf-8&#x27;</span>, errors=<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(decoded_string) <span class="comment"># folder：299d12d88e0e99c1</span></span><br></pre></td></tr></table></figure><p>输出<code>folder：299d12d88e0e99c1</code></p><p>暗示文件夹&#x2F;299d12d88e0e99c1&#x2F;?</p><h3 id="5-寻找文件夹"><a href="#5-寻找文件夹" class="headerlink" title="5. 寻找文件夹"></a>5. 寻找文件夹</h3><p>较快的方法：使用Everything进行搜索</p><p><img src="/img/malware/5.png" alt="图5"></p><p>文件夹中有</p><p><code>readme.exe</code></p><p>打开发现需要输入密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">password: </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>runtime.txt</code></p><p>打开发现文本</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gAp9xge69vuNF4Kyr/UcjO3iFlFt+e5OFZ5/zYcv703qor2K0eorwcbddlgX/6JiAq1+qnbKPnOZ+MHk7Vy55wKeLYShEvc44jZYT0HIoHLEczXOFgq8qdNsF7RhjNYNNKzDy1cc0i2pDXGTczxqct0CUkHUNI0jkpn9Vm8O19J/caIWb1NdOzfhr86gEzehkXh560sv5X8LBgo0kmJc9pEprJ+SV9vQ4pA4W+C7AtipyC7FU/51tUI/Dl9q2hpUnE1Qt4PyBDsRiaWWQ0ORQCANEapVc/b70ffxYDim5aBfvwYhc7DEo5oFcQUOiAorOnWayzz3CE0I+4qu5nRqgg==</span><br></pre></td></tr></table></figure><p>发现这段Base64编码被加密    RSA AES?</p><p>已知一段加密数据</p><h3 id="6-寻找私钥"><a href="#6-寻找私钥" class="headerlink" title="6. 寻找私钥"></a>6. 寻找私钥</h3><h4 id="6-1-法1-查看源文件"><a href="#6-1-法1-查看源文件" class="headerlink" title="6.1 法1 查看源文件"></a>6.1 法1 查看源文件</h4><p>关键信息明文写在程序里，可以减少反编译步骤</p><p><img src="/img/malware/6.png" alt="图6"></p><h4 id="6-2-法2-反编译exe"><a href="#6-2-法2-反编译exe" class="headerlink" title="6.2 法2 反编译exe"></a>6.2 法2 反编译exe</h4><p>使用IDA64进行反编译exe</p><p>阅读理解C语言代码</p><p><img src="/img/malware/7.png" alt="图7"></p><p>意思是若输入的是<code>iamnottom</code>会打印KEY</p><p>…</p><p>重新双击运行readme.exe</p><p>输入密码</p><h4 id="6-3-得到私钥"><a href="#6-3-得到私钥" class="headerlink" title="6.3 得到私钥"></a>6.3 得到私钥</h4><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN PRIVATE KEY-----</span><br><span class="line">MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC04AAI4K7DdGTx</span><br><span class="line">KL86f54wT0ouQrDlL4krCz7DfeuFtaRPbHR/X+2wV7iX+e+doquuAgJ56DyLaRgm</span><br><span class="line">ZxV6ksn/vfg0qVJlKfgfqnUsH+5quun14oc7gsdNWHkJqUh9O8pTce/ElK2YbABi</span><br><span class="line">9J06p4Z1PyxpjTkViFz+YVpY5zHo2ysa4tlH1VCpYjjzUQXAMD3NbroBXTYa2Lex</span><br><span class="line">UI/Xb2mnZepcGc5/ovQAzf227ORwNS6TcQiz0Wa+V7Ggz3fNBqtqipVg6QHT71a7</span><br><span class="line">TOfZCOPTOW6K49p70DX+3Z3ezpIiX/ZpgBGGAckMGsNsI8lGIAR3vjXsNBeQ0sn2</span><br><span class="line">FFnp+T+9AgMBAAECggEAFo0TFAhHYdEiQLsO1JFSvL02B3yDJ5/8nyRAyAjsE3ip</span><br><span class="line">Ksnf4H2qWeEl/7TGvkWo2AIiIubknZEV1LvnfqfMjZk22AIAZuKLsA8FmuHETQRO</span><br><span class="line">5TxAFhhhFvCf7qdvhUWuHSdIeJ784dMdXTkYXVbDudyNgf98jYW56nFi3VC99UUg</span><br><span class="line">TaZWXAwr0yjDVqRWe2TpqjDAqNauvVFOhJgsNQ2yJf+XjqTLngM05vQg97CY1BUa</span><br><span class="line">pQ4YlvonfX2t4URxz5wsf88DJCRvjTuedezNFyMfyJyPWFylDsvoio9UTk000Tae</span><br><span class="line">Zr7Ab0e+gMbdcgo7lgOw7jue0mM+SH/uILU8SaRHVQKBgQDpcibMd56CQ0MT7Kw/</span><br><span class="line">Zue1hpjrcaWlCK5nZ/21Eyu5giAA8CcKvTAL08r4E/ZV7gs28wsk8TZ/wvP63Xqj</span><br><span class="line">+Z+t98IRgJyFhed/2cUHRjEtGBkPbrzG0f2QgzDXx2Xkg27h6xXH7SSCZ6SV5Wr2</span><br><span class="line">Ngnt9LuKmjnQx90sAhBxRpblIwKBgQDGWZr/DBncbK6/SKKr+h7sf8fWmEJvlC9E</span><br><span class="line">2pyszEm6foKMxUKOCLpvzLuXZBDDj4tJrPg2oGaA2zU9TAvzX6spT7VnvJhwmP+r</span><br><span class="line">+QUysTnv0rUZDs5mHGYbjWly+9J6GcYzb896kL6EMK9BNGVfSiH2vsV6ugYJIo61</span><br><span class="line">Zkv/+6/FnwKBgQC7qp3QL7WIiKQLB29tRL+vKXYTiHgeVP1Hecz2XWQALMCnoGfy</span><br><span class="line">dSaDy45Wok2cxNHVKctitlsWmFXk7VmjKpCYnR0xTtAFcyEooZuH/oCX/NBgnKg7</span><br><span class="line">uSJ7o0uHm++opZRlH8SRxW1dPA6OxjCXn9eZqO1/Pf6Ofa2qrDolpha2OwKBgG23</span><br><span class="line">y0Eh1HxVsiQlbbZr2QdBd62A8978vVj9BIWhS3dZ26U6yKIAugB1457Ov2ct1AKh</span><br><span class="line">J3wwJgNJPp31nva1CN0FNnd3n2tJdsQOL43m8wFyMLL3ubxKIUFEa/wqyDa6YyS4</span><br><span class="line">yLAnuPsuYwNSlHCtdTQkOuC0XfpXn1FAkPG8q3JJAoGBAMy4385KPM27iQE38UBm</span><br><span class="line">9gh17VBqaUxd+9s6Zkb4noS00vR3S0oDrQaNIdPCJphm1xlewqx2jbYMQX7aDrgF</span><br><span class="line">r7mV6V2V78Ex8P7YoL9CfndnoYcq5mZTwKhuKZaenHNYk33qAuEVOkwGI+JcedSn</span><br><span class="line">OHYMpp6ckBxSzsNcekc+mH0i</span><br><span class="line">-----END PRIVATE KEY-----</span><br></pre></td></tr></table></figure><h3 id="7-解RSA加密"><a href="#7-解RSA加密" class="headerlink" title="7. 解RSA加密"></a>7. 解RSA加密</h3><p>常见的填充方式包括：</p><ul><li><p>PKCS#1 v1.5 :</p><p>  通常用于传统的RSA加密。</p></li><li><p>OAEP(Optimal Asymmetric Encryption Padding) : </p><p>  更安全的填充方式, 通常与SHA-256等哈希算法一起使用。</p></li></ul><p>python无敌</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> cryptography.hazmat.backends <span class="keyword">import</span> default_backend</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives <span class="keyword">import</span> serialization</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives.asymmetric <span class="keyword">import</span> padding</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives <span class="keyword">import</span> hashes</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="comment"># Base64 编码的加密数据</span></span><br><span class="line">encrypted_data_b64 = <span class="string">&quot;gAp9xge69vuNF4Kyr/UcjO3iFlFt+e5OFZ5/zYcv703qor2K0eorwcbddlgX/6JiAq1+qnbKPnOZ+MHk7Vy55wKeLYShEvc44jZYT0HIoHLEczXOFgq8qdNsF7RhjNYNNKzDy1cc0i2pDXGTczxqct0CUkHUNI0jkpn9Vm8O19J/caIWb1NdOzfhr86gEzehkXh560sv5X8LBgo0kmJc9pEprJ+SV9vQ4pA4W+C7AtipyC7FU/51tUI/Dl9q2hpUnE1Qt4PyBDsRiaWWQ0ORQCANEapVc/b70ffxYDim5aBfvwYhc7DEo5oFcQUOiAorOnWayzz3CE0I+4qu5nRqgg==&quot;</span></span><br><span class="line"><span class="comment"># RSA 私钥字符串</span></span><br><span class="line">private_key_str = <span class="string">&quot;&quot;&quot;-----BEGIN PRIVATE KEY-----</span></span><br><span class="line"><span class="string">MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC04AAI4K7DdGTx</span></span><br><span class="line"><span class="string">KL86f54wT0ouQrDlL4krCz7DfeuFtaRPbHR/X+2wV7iX+e+doquuAgJ56DyLaRgm</span></span><br><span class="line"><span class="string">ZxV6ksn/vfg0qVJlKfgfqnUsH+5quun14oc7gsdNWHkJqUh9O8pTce/ElK2YbABi</span></span><br><span class="line"><span class="string">9J06p4Z1PyxpjTkViFz+YVpY5zHo2ysa4tlH1VCpYjjzUQXAMD3NbroBXTYa2Lex</span></span><br><span class="line"><span class="string">UI/Xb2mnZepcGc5/ovQAzf227ORwNS6TcQiz0Wa+V7Ggz3fNBqtqipVg6QHT71a7</span></span><br><span class="line"><span class="string">TOfZCOPTOW6K49p70DX+3Z3ezpIiX/ZpgBGGAckMGsNsI8lGIAR3vjXsNBeQ0sn2</span></span><br><span class="line"><span class="string">FFnp+T+9AgMBAAECggEAFo0TFAhHYdEiQLsO1JFSvL02B3yDJ5/8nyRAyAjsE3ip</span></span><br><span class="line"><span class="string">Ksnf4H2qWeEl/7TGvkWo2AIiIubknZEV1LvnfqfMjZk22AIAZuKLsA8FmuHETQRO</span></span><br><span class="line"><span class="string">5TxAFhhhFvCf7qdvhUWuHSdIeJ784dMdXTkYXVbDudyNgf98jYW56nFi3VC99UUg</span></span><br><span class="line"><span class="string">TaZWXAwr0yjDVqRWe2TpqjDAqNauvVFOhJgsNQ2yJf+XjqTLngM05vQg97CY1BUa</span></span><br><span class="line"><span class="string">pQ4YlvonfX2t4URxz5wsf88DJCRvjTuedezNFyMfyJyPWFylDsvoio9UTk000Tae</span></span><br><span class="line"><span class="string">Zr7Ab0e+gMbdcgo7lgOw7jue0mM+SH/uILU8SaRHVQKBgQDpcibMd56CQ0MT7Kw/</span></span><br><span class="line"><span class="string">Zue1hpjrcaWlCK5nZ/21Eyu5giAA8CcKvTAL08r4E/ZV7gs28wsk8TZ/wvP63Xqj</span></span><br><span class="line"><span class="string">+Z+t98IRgJyFhed/2cUHRjEtGBkPbrzG0f2QgzDXx2Xkg27h6xXH7SSCZ6SV5Wr2</span></span><br><span class="line"><span class="string">Ngnt9LuKmjnQx90sAhBxRpblIwKBgQDGWZr/DBncbK6/SKKr+h7sf8fWmEJvlC9E</span></span><br><span class="line"><span class="string">2pyszEm6foKMxUKOCLpvzLuXZBDDj4tJrPg2oGaA2zU9TAvzX6spT7VnvJhwmP+r</span></span><br><span class="line"><span class="string">+QUysTnv0rUZDs5mHGYbjWly+9J6GcYzb896kL6EMK9BNGVfSiH2vsV6ugYJIo61</span></span><br><span class="line"><span class="string">Zkv/+6/FnwKBgQC7qp3QL7WIiKQLB29tRL+vKXYTiHgeVP1Hecz2XWQALMCnoGfy</span></span><br><span class="line"><span class="string">dSaDy45Wok2cxNHVKctitlsWmFXk7VmjKpCYnR0xTtAFcyEooZuH/oCX/NBgnKg7</span></span><br><span class="line"><span class="string">uSJ7o0uHm++opZRlH8SRxW1dPA6OxjCXn9eZqO1/Pf6Ofa2qrDolpha2OwKBgG23</span></span><br><span class="line"><span class="string">y0Eh1HxVsiQlbbZr2QdBd62A8978vVj9BIWhS3dZ26U6yKIAugB1457Ov2ct1AKh</span></span><br><span class="line"><span class="string">J3wwJgNJPp31nva1CN0FNnd3n2tJdsQOL43m8wFyMLL3ubxKIUFEa/wqyDa6YyS4</span></span><br><span class="line"><span class="string">yLAnuPsuYwNSlHCtdTQkOuC0XfpXn1FAkPG8q3JJAoGBAMy4385KPM27iQE38UBm</span></span><br><span class="line"><span class="string">9gh17VBqaUxd+9s6Zkb4noS00vR3S0oDrQaNIdPCJphm1xlewqx2jbYMQX7aDrgF</span></span><br><span class="line"><span class="string">r7mV6V2V78Ex8P7YoL9CfndnoYcq5mZTwKhuKZaenHNYk33qAuEVOkwGI+JcedSn</span></span><br><span class="line"><span class="string">OHYMpp6ckBxSzsNcekc+mH0i</span></span><br><span class="line"><span class="string">-----END PRIVATE KEY-----&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解码 Base64 编码的数据</span></span><br><span class="line">encrypted_data = base64.b64decode(encrypted_data_b64)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载私钥</span></span><br><span class="line">private_key = serialization.load_pem_private_key(</span><br><span class="line">    private_key_str.encode(),</span><br><span class="line">    password=<span class="literal">None</span>,</span><br><span class="line">    backend=default_backend()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt_data</span>(<span class="params">encrypted_data</span>):</span><br><span class="line">    <span class="comment"># padding_type == &quot;OAEP&quot;:</span></span><br><span class="line">    <span class="keyword">try</span>:    </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Try padding_type OAEP to Decryption...&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> private_key.decrypt(</span><br><span class="line">            encrypted_data,</span><br><span class="line">            padding.OAEP(</span><br><span class="line">                mgf=padding.MGF1(algorithm=hashes.SHA256()),</span><br><span class="line">                algorithm=hashes.SHA256(),</span><br><span class="line">                label=<span class="literal">None</span></span><br><span class="line">            )</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;OAEP Decryption failed&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># padding_type == &quot;PKCS1v15&quot;:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Try padding_type PKCS1v15 to Decryption...&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> private_key.decrypt(</span><br><span class="line">            encrypted_data,</span><br><span class="line">            padding.PKCS1v15()</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;PKCS1v15 Decryption failed&quot;</span>)    </span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密数据</span></span><br><span class="line">decrypted_data = decrypt_data(encrypted_data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出解密后的数据</span></span><br><span class="line"><span class="built_in">print</span>(decrypted_data.decode())  <span class="comment"># b4e9ab2f61cbfda4</span></span><br></pre></td></tr></table></figure><p><code>b4e9ab2f61cbfda4</code></p><h3 id="8-解MD5加密"><a href="#8-解MD5加密" class="headerlink" title="8. 解MD5加密"></a>8. 解MD5加密</h3><p>首先他有十六位</p><p>可能是某种数据的哈希值 例如 </p><ul><li>MD5(16&#x2F;32位十六进制) </li><li>SHA-1(40位十六进制) </li><li>SHA-256(64位十六进制)</li></ul><p>MD5加密后的位数有两种类型: 16位与32位 默认使用32位。<br>16位实际上是从32位字符串中取中间的第9位到第24位的部分</p><p>例如 “admin” :<br>16位加密  7a57a5a743894a0e<br>32位加密  21232f297a57a5a743894a0e4a801fc3</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="comment"># 32位 - 0  16位 - 1  </span></span><br><span class="line">p1 = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 目标哈希值</span></span><br><span class="line">target_hash = <span class="string">&quot;b4e9ab2f61cbfda4&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历所有可能的5位数字</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100000</span>):  <span class="comment"># 从00000到99999</span></span><br><span class="line">    original_data = <span class="string">f&quot;<span class="subst">&#123;i:05d&#125;</span>&quot;</span>  <span class="comment"># 格式化为5位数字</span></span><br><span class="line">    hash_value = hashlib.md5(original_data.encode()).hexdigest()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> p1:  </span><br><span class="line">        hash_value = hash_value[<span class="number">8</span>:<span class="number">24</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> hash_value == target_hash:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Found original data: <span class="subst">&#123;original_data&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Original data not found.&quot;</span>)</span><br></pre></td></tr></table></figure><pre><code>Found original data: 95173</code></pre><h3 id="9-小结"><a href="#9-小结" class="headerlink" title="9.小结"></a>9.小结</h3><p>解密成功</p><p>这个密码正好对应了本作游戏公司Odd Games</p><p>Odd有奇数的含义</p><p>给予创作者大大的肯定👍</p><h2 id="测评"><a href="#测评" class="headerlink" title="测评"></a>测评</h2><p>一款单人解密策略模拟游戏。玩家将穿越回到1999年躲避流氓软件的恶意安装。</p><p>前面的关卡还是比较常见。到了中间有不少关卡还是没见过，有些难找需要攻略。</p><p>优点：<br>    - 主题玩法新颖<br>    - 探索性强<br>    - 构思巧妙</p><p>缺点：<br>    - 内置小游戏戏份过重<br>    - 体量小</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/10/20/hello-world/"/>
      <url>/2024/10/20/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo-Butterfly配置安装"><a href="#Hexo-Butterfly配置安装" class="headerlink" title="Hexo-Butterfly配置安装"></a>Hexo-Butterfly配置安装</h2><h3 id="1-安装配置Git"><a href="#1-安装配置Git" class="headerlink" title="1.安装配置Git"></a>1.安装配置Git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;Your Name&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;your_email@example.com&quot;</span></span><br></pre></td></tr></table></figure><h3 id="2-安装配置Node-js"><a href="#2-安装配置Node-js" class="headerlink" title="2.安装配置Node.js"></a>2.安装配置Node.js</h3><h4 id="2-1安装包管理器mvn"><a href="#2-1安装包管理器mvn" class="headerlink" title="2.1安装包管理器mvn"></a>2.1安装包管理器mvn</h4><p><a href="https://github.com/coreybutler/nvm-windows/releases">https://github.com/coreybutler/nvm-windows/releases</a></p><p>安装目录root下在settings.txt文件新增镜像加速</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node_mirror: https://npmmirror.com/mirrors/node/</span><br><span class="line">npm_mirror: https://npmmirror.com/mirrors/npm/</span><br></pre></td></tr></table></figure><h4 id="2-2安装Node-js包"><a href="#2-2安装Node-js包" class="headerlink" title="2.2安装Node.js包"></a>2.2安装Node.js包</h4><p>查看版本列表 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm list available</span><br></pre></td></tr></table></figure><p>推荐安装LTS(长期支持版本)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install &lt;version&gt;</span><br></pre></td></tr></table></figure><p>使用对应选择的version</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm use &lt;version&gt;</span><br></pre></td></tr></table></figure><h4 id="2-3测试"><a href="#2-3测试" class="headerlink" title="2.3测试"></a>2.3测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h3 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="4-初始化"><a href="#4-初始化" class="headerlink" title="4.初始化"></a>4.初始化</h3><h4 id="4-1新建仓库"><a href="#4-1新建仓库" class="headerlink" title="4.1新建仓库"></a>4.1新建仓库</h4><p>cd 到需要创建仓库的位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog-demo</span><br></pre></td></tr></table></figure><p>此命令在当前文件夹生成blog-demo文件夹</p><p>blog-demo文件夹里是新建成的仓库</p><h4 id="4-2初次启动Hexo"><a href="#4-2初次启动Hexo" class="headerlink" title="4.2初次启动Hexo"></a>4.2初次启动Hexo</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog-demo</span><br><span class="line">npm i</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>将在 <a href="http://localhost:4000/">http://localhost:4000/</a> 部署页面</p><h3 id="5-部署到github-io"><a href="#5-部署到github-io" class="headerlink" title="5.部署到github.io"></a>5.部署到github.io</h3><h4 id="5-1git连接远端仓库"><a href="#5-1git连接远端仓库" class="headerlink" title="5.1git连接远端仓库"></a>5.1git连接远端仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">&quot;your_email@example.com&quot;</span></span><br><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub   (内容拷贝至github ssh-key)</span><br></pre></td></tr></table></figure><p>新建个人github.io网站仓库</p><p><code>Your repo</code>: 使用https或ssh链接</p><h4 id="5-2修改-config-yml文件"><a href="#5-2修改-config-yml文件" class="headerlink" title="5.2修改_config.yml文件"></a>5.2修改_config.yml文件</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">&lt;Your</span> <span class="string">repo&gt;</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><h4 id="5-3部署"><a href="#5-3部署" class="headerlink" title="5.3部署"></a>5.3部署</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure><h3 id="6-配置butterfly主题"><a href="#6-配置butterfly主题" class="headerlink" title="6.配置butterfly主题"></a>6.配置butterfly主题</h3><h3 id="6-1clone-主题butterfly"><a href="#6-1clone-主题butterfly" class="headerlink" title="6.1clone 主题butterfly"></a>6.1clone 主题butterfly</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> node_modules</span><br><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git hexo-theme-butterfly</span><br></pre></td></tr></table></figure><p>可拉取更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><h3 id="6-2应用主题"><a href="#6-2应用主题" class="headerlink" title="6.2应用主题"></a>6.2应用主题</h3><p>修改_config_yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure><p>安装 pug 以及 stylus 的渲染器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>在根目录下新建一个<code>_config.butterfly.yml</code>文件</p><p>把主题文件夹里<code>_config.yml</code>文件内容复制进去</p><p><code>_config.landscape.yml</code>可删除</p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 鼠标样式 */#cursor {    position: fixed;    width: 16px;    height: 16px;    /* 这里改变跟随的底色 */    background: rgb(57, 197, 187);    border-radius: 8px;    opacity: 0.25;    z-index: 10086;    pointer-events: none;    transition: 0.2s ease-in-out;    transition-property: background, opacity, transform;  }  #cursor.hidden {    opacity: 0;}#cursor.hover {    opacity: 0.1;    transform: scale(2.5);    -webkit-transform: scale(2.5);    -moz-transform: scale(2.5);    -ms-transform: scale(2.5);    -o-transform: scale(2.5);}#cursor.active {    opacity: 0.5;    transform: scale(0.5);    -webkit-transform: scale(0.5);    -moz-transform: scale(0.5);    -ms-transform: scale(0.5);    -o-transform: scale(0.5);}/* 文章页H1-H6图标样式效果 *//* 控制风车转动速度 4s那里可以自己调节快慢 */h1::before,h2::before,h3::before,h4::before,h5::before,h6::before {  -webkit-animation: ccc 4s linear infinite;  animation: ccc 4s linear infinite;}/* 控制风车转动方向 -1turn 为逆时针转动，1turn 为顺时针转动，相同数字部分记得统一修改 */@-webkit-keyframes ccc {  0% {    -webkit-transform: rotate(0deg);    transform: rotate(0deg);  }  to {    -webkit-transform: rotate(-1turn);    transform: rotate(-1turn);  }}@keyframes ccc {  0% {    -webkit-transform: rotate(0deg);    transform: rotate(0deg);  }  to {    -webkit-transform: rotate(-1turn);    transform: rotate(-1turn);  }}/* 设置风车颜色 */#content-inner.layout h1::before {  color: #ef50a8;  font-size: 1.3rem;  margin-top: -0.23rem;}#content-inner.layout h2::before {  color: #fb7061;  font-size: 1.1rem;  margin-top: -0.12rem;}#content-inner.layout h3::before {  color: #ffbf00;  font-size: 0.95rem;  margin-top: -0.09rem;}#content-inner.layout h4::before {  color: #a9e000;  font-size: 0.8rem;  margin-top: -0.09rem;}#content-inner.layout h5::before {  color: #57c850;  font-size: 0.7rem;  margin-top: 0rem;}#content-inner.layout h6::before {  color: #5ec1e0;  font-size: 0.66rem;  margin-top: 0rem;}/* s设置风车hover动效 6s那里可以自己调节快慢*/#content-inner.layout h1:hover,#content-inner.layout h2:hover,#content-inner.layout h3:hover,#content-inner.layout h4:hover,#content-inner.layout h5:hover,#content-inner.layout h6:hover {  color: var(--theme-color);}#content-inner.layout h1:hover::before,#content-inner.layout h2:hover::before,#content-inner.layout h3:hover::before,#content-inner.layout h4:hover::before,#content-inner.layout h5:hover::before,#content-inner.layout h6:hover::before {  color: var(--theme-color);  -webkit-animation: ccc 6s linear infinite;  animation: ccc 6s linear infinite;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/cursor.js"/>
      <url>/js/cursor.js</url>
      
        <content type="html"><![CDATA[var CURSOR;Math.lerp = (a, b, n) => (1 - n) * a + n * b;const getStyle = (el, attr) => {    try {        return window.getComputedStyle            ? window.getComputedStyle(el)[attr]            : el.currentStyle[attr];    } catch (e) {}    return "";};class Cursor {    constructor() {        this.pos = {curr: null, prev: null};        this.pt = [];        this.create();        this.init();        this.render();    }    move(left, top) {        this.cursor.style["left"] = `${left}px`;        this.cursor.style["top"] = `${top}px`;    }    create() {        if (!this.cursor) {            this.cursor = document.createElement("div");            this.cursor.id = "cursor";            this.cursor.classList.add("hidden");            document.body.append(this.cursor);        }        var el = document.getElementsByTagName('*');        for (let i = 0; i < el.length; i++)            if (getStyle(el[i], "cursor") == "pointer")                this.pt.push(el[i].outerHTML);        document.body.appendChild((this.scr = document.createElement("style")));        // 这里改变鼠标指针的颜色 由svg生成        this.scr.innerHTML = `* {cursor: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8' width='8px' height='8px'><circle cx='4' cy='4' r='4' opacity='1.0' fill='rgb(57, 197, 187)'/></svg>") 4 4, auto}`;    }    refresh() {        this.scr.remove();        this.cursor.classList.remove("hover");        this.cursor.classList.remove("active");        this.pos = {curr: null, prev: null};        this.pt = [];        this.create();        this.init();        this.render();    }    init() {        document.onmouseover  = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.add("hover");        document.onmouseout   = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.remove("hover");        document.onmousemove  = e => {(this.pos.curr == null) && this.move(e.clientX - 8, e.clientY - 8); this.pos.curr = {x: e.clientX - 8, y: e.clientY - 8}; this.cursor.classList.remove("hidden");};        document.onmouseenter = e => this.cursor.classList.remove("hidden");        document.onmouseleave = e => this.cursor.classList.add("hidden");        document.onmousedown  = e => this.cursor.classList.add("active");        document.onmouseup    = e => this.cursor.classList.remove("active");    }    render() {        if (this.pos.prev) {            this.pos.prev.x = Math.lerp(this.pos.prev.x, this.pos.curr.x, 0.15);            this.pos.prev.y = Math.lerp(this.pos.prev.y, this.pos.curr.y, 0.15);            this.move(this.pos.prev.x, this.pos.prev.y);        } else {            this.pos.prev = this.pos.curr;        }        requestAnimationFrame(() => this.render());    }}(() => {    CURSOR = new Cursor();    // 需要重新获取列表时，使用 CURSOR.refresh()})();]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
